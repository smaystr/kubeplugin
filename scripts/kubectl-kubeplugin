#!/bin/bash

# kubectl plugin for getting resource usage statistics
# Usage: kubectl kubeplugin <RESOURCE_TYPE> -n <NAMESPACE>

set -euo pipefail

# Default values
NAMESPACE="default"
RESOURCE_TYPE=""

# Function to display usage
usage() {
    echo "Usage: kubectl kubeplugin <RESOURCE_TYPE> [-n|--namespace <NAMESPACE>]"
    echo ""
    echo "Get resource usage statistics for Kubernetes resources"
    echo ""
    echo "Arguments:"
    echo "  RESOURCE_TYPE    Type of resource (pod, node)"
    echo ""
    echo "Options:"
    echo "  -n, --namespace  Kubernetes namespace (default: default)"
    echo "  -h, --help       Show this help message"
    echo ""
    echo "Output format: Resource, Namespace, Name, CPU, Memory"
    echo ""
    echo "Examples:"
    echo "  kubectl kubeplugin pod -n kube-system"
    echo "  kubectl kubeplugin node"
    exit 0
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -n|--namespace)
            NAMESPACE="$2"
            shift 2
            ;;
        -h|--help)
            usage
            ;;
        *)
            if [[ -z "$RESOURCE_TYPE" ]]; then
                RESOURCE_TYPE="$1"
            else
                echo "Error: Unknown argument: $1" >&2
                usage
            fi
            shift
            ;;
    esac
done

# Check if resource type is provided
if [[ -z "$RESOURCE_TYPE" ]]; then
    echo "Error: Resource type is required" >&2
    usage
fi

# Get the resource usage based on resource type
case "$RESOURCE_TYPE" in
    node|nodes)
        # For nodes, use kubectl top node
        kubectl top node 2>/dev/null | tail -n +2 | while read -r line; do
            NAME=$(echo "$line" | awk '{print $1}')
            CPU=$(echo "$line" | awk '{print $2}')
            MEMORY=$(echo "$line" | awk '{print $4}')
            echo "node, -, $NAME, $CPU, $MEMORY"
        done
        ;;
    pod|pods)
        # For pods, use kubectl top pod
        kubectl top pod -n "$NAMESPACE" 2>/dev/null | tail -n +2 | while read -r line; do
            NAME=$(echo "$line" | awk '{print $1}')
            CPU=$(echo "$line" | awk '{print $2}')
            MEMORY=$(echo "$line" | awk '{print $3}')
            echo "pod, $NAMESPACE, $NAME, $CPU, $MEMORY"
        done
        ;;
    *)
        echo "Error: Resource type '$RESOURCE_TYPE' is not supported for metrics" >&2
        echo "Supported types: node, pod" >&2
        exit 1
        ;;
esac

# Check if kubectl top command was successful
if [[ ${PIPESTATUS[0]} -ne 0 ]]; then
    echo "Error: Failed to get metrics. Make sure metrics-server is installed in your cluster." >&2
    exit 1
fi 